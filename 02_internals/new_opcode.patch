From acb034194b973944fd8887c8451fca8af0ed0e89 Mon Sep 17 00:00:00 2001
From: Vladislav Volkov <zloyvolkey@gmail.com>
Date: Tue, 17 Mar 2020 14:57:46 +0000
Subject: [PATCH] Added new opcode LOAD_OTUS

---
 Include/opcode.h        |  2 +-
 Lib/opcode.py           |  1 +
 Python/ceval.c          | 17 ++++++++++++++++-
 Python/opcode_targets.h |  2 +-
 Python/peephole.c       |  9 +++++++++
 5 files changed, 28 insertions(+), 3 deletions(-)

diff --git a/Include/opcode.h b/Include/opcode.h
index 9ed548729e..893105c220 100644
--- a/Include/opcode.h
+++ b/Include/opcode.h
@@ -159,7 +159,7 @@ extern "C" {
 #define SET_ADD         146
 #define MAP_ADD         147
 
-
+#define LOAD_OTUS	148
 enum cmp_op {PyCmp_LT=Py_LT, PyCmp_LE=Py_LE, PyCmp_EQ=Py_EQ, PyCmp_NE=Py_NE, PyCmp_GT=Py_GT, PyCmp_GE=Py_GE,
 	     PyCmp_IN, PyCmp_NOT_IN, PyCmp_IS, PyCmp_IS_NOT, PyCmp_EXC_MATCH, PyCmp_BAD};
 
diff --git a/Lib/opcode.py b/Lib/opcode.py
index e403365b6a..d2a1229f13 100644
--- a/Lib/opcode.py
+++ b/Lib/opcode.py
@@ -188,5 +188,6 @@ def_op('EXTENDED_ARG', 145)
 EXTENDED_ARG = 145
 def_op('SET_ADD', 146)
 def_op('MAP_ADD', 147)
+def_op('LOAD_OTUS', 148)
 
 del def_op, name_op, jrel_op, jabs_op
diff --git a/Python/ceval.c b/Python/ceval.c
index e1140a8e40..1d157239e1 100644
--- a/Python/ceval.c
+++ b/Python/ceval.c
@@ -1235,7 +1235,22 @@ PyEval_EvalFrameEx(PyFrameObject *f, int throwflag)
                 PyTuple_GetItem(co->co_varnames, oparg));
             break;
         }
-
+        TARGET(LOAD_OTUS)
+        {
+            x = GETLOCAL(0);
+            if (x != NULL) {
+                Py_INCREF(x);
+                PUSH(x);
+                x = GETITEM(consts, oparg);
+                Py_INCREF(x);
+                PUSH(x);
+                FAST_DISPATCH();
+            }
+            format_exc_check_arg(PyExc_UnboundLocalError,
+                UNBOUNDLOCAL_ERROR_MSG,
+                PyTuple_GetItem(co->co_varnames, oparg));
+            break;
+        }
         TARGET(LOAD_CONST)
         {
             x = GETITEM(consts, oparg);
diff --git a/Python/opcode_targets.h b/Python/opcode_targets.h
index 95eb127a15..8c29b98960 100644
--- a/Python/opcode_targets.h
+++ b/Python/opcode_targets.h
@@ -147,7 +147,7 @@ static void *opcode_targets[256] = {
     &&TARGET_EXTENDED_ARG,
     &&TARGET_SET_ADD,
     &&TARGET_MAP_ADD,
-    &&_unknown_opcode,
+    &&TARGET_LOAD_OTUS,
     &&_unknown_opcode,
     &&_unknown_opcode,
     &&_unknown_opcode,
diff --git a/Python/peephole.c b/Python/peephole.c
index 11f6f8861c..cac67ddd8a 100644
--- a/Python/peephole.c
+++ b/Python/peephole.c
@@ -411,6 +411,15 @@ PyCode_Optimize(PyObject *code, PyObject* consts, PyObject *names,
                 cumlc = lastlc + 1;
                 break;
 
+	    case LOAD_FAST:
+                j = GETARG(codestr, i);
+                if (codestr[i+3] == LOAD_CONST && j == 0)
+                {
+                    codestr[i+3] = LOAD_OTUS;
+                    memset(codestr+i, NOP, 3);
+                }
+                break;
+
                 /* Skip over LOAD_CONST trueconst
                    POP_JUMP_IF_FALSE xx. This improves
                    "while 1" performance. */
-- 
2.18.2

